#!/bin/tcsh

#
# PBS invocations
#

#PBS -v SSH_AUTH_SOCK=foo
#PBS -m a
#PBS -l nodes=1:ppn=1
#PBS -j oe

if(`hostname` == 'c105008.campus.ias.edu' ) then
	echo "Caladan settings."
	setenv WORKSPACE /home/mjuric/projects/galaxy/workspace
	setenv CONF_SDSS $WORKSPACE/$RUNSET/conf.sdss
	setenv BIN /home/mjuric/projects/galaxy/optimized/src
else
	setenv WORKSPACE /scr0/mjuric/galaxy/workspace
	setenv LD_LIBRARY_PATH /scr0/mjuric/usr/lib
	setenv CONF_SDSS /scr0/mjuric/galaxy/workspace/$RUNSET/conf.sdss
	setenv BIN /scr0/mjuric/usr/bin
endif

if(! $?MAP ) then
	echo "Environment variable MAP not set. MAP defines the color bin on which to work. Aborting.";
	exit -1;
endif

if(! $?CMD ) then
	echo "Environment variable CMD not set. CMD defines the action to perform on MAP. Aborting.";
	exit -1;
endif

if(! -f $WORKSPACE/$RUNSET/bins.txt) then
	echo "Cannot open $RUNSET/bins.txt. Aborting.\n";
	exit -1;
endif

# source environment variables
if(-d $WORKSPACE/$RUNSET/vars) then
	foreach i (`ls $WORKSPACE/$RUNSET/vars`)
		setenv $i `cat $WORKSPACE/$RUNSET/vars/$i`
	end
endif

set specs = (`cat $WORKSPACE/$RUNSET/bins.txt | grep -v "^#.*" | head -n $MAP | tail -n 1`)
set RI0 = $specs[1]; set RI1 = $specs[2];
set DX0 = $specs[3]; set NDX = $specs[4];
set R0  = $specs[5]; set R1  = $specs[6];

set ddx = `echo "$DX0 * $NDX" | bc`
set ddx = `printf "%6.3f" $ddx`
set RI0 = `printf "%5.3f" $RI0`
set RI1 = `printf "%5.3f" $RI1`
set R0  = `printf "%5.3f" $R0`
set R1  = `printf "%5.3f" $R1`

echo Runset ID: $RUNSET
echo Map number: $MAP
echo Map specification: RI0=$RI0 RI1=$RI1 DX0=$DX0 NDX=$NDX R0=$R0 R1=$R1
echo Command: $CMD

switch($CMD)
case "binxy":
	set output = "cache/plane.r=$R0-$R1,ri=$RI0-$RI1,dx=$ddx,origin=0.00000,0.00000,0.00000,euler_rot=0.00000,0.00000,0.00000.bin"
	echo "Output file: $output"

	cd $WORKSPACE/$RUNSET && \
	time $BIN/bin_volume.x --type=plane $R0 $R1 $RI0 $RI1 merged.bin $DX0 $NDX \
	"$output" \
	--coordsys=galcart \
	--x1=0.000000,0.000000,0.000000 --x2=1.000000,0.000000,0.000000 \
	--x3=0.000000,1.000000,0.000000 --x0=8000.000000,0.000000,0.000000 \
	--delta=10000000000.000000 --earthonaxis=0
breaksw;
case "bincyl":
	set output = "cache/cylindrical.$R0-$R1.$RI0-$RI1.dx=$ddx.phi0=-180.bin"
	echo "Output file: $output"

	cd $WORKSPACE/$RUNSET && \
	time $BIN/bin_volume.x --type=cyl --phi0=-180.000000 \
	$R0 $R1 $RI0 $RI1 merged.bin $DX0 $NDX \
	"$output"
breaksw;
case "selxy":
	set output = "txt/all.$R0-$R1.$RI0-$RI1.txt"
	echo "Output file: $output"

	if ( -f $RUNSET/sample.sel) then
		echo "Sample definition file [$RUNSET/sample.sel] contents:"
		cat $RUNSET/sample.sel
	endif
	echo

	cd $WORKSPACE/$RUNSET && \
	echo "new $output\n     import sample.sel\n        planecut $R0 $R1 $RI0 $RI1 galcart $DX0 $NDX" | $BIN/selector.x \
	  -s dmm/uniq_objects.dmm -o dmm/uniq_observations.dmm
breaksw;
case "selcyl":
	set output = "txt/cyl.$R0-$R1.$RI0-$RI1.txt"
	echo "Output file: $output"

	if ( -f $RUNSET/sample.sel) then
		echo "Sample definition file [$RUNSET/sample.sel] contents:"
		cat $RUNSET/sample.sel
	endif
	echo

	cd $WORKSPACE/$RUNSET && \
	echo "new $output\n     import sample.sel\n        cylindrical $R0 $R1 $RI0 $RI1 $DX0 $NDX -180 $DX0 $NDX" | $BIN/selector.x \
	  -s dmm/uniq_objects.dmm -o dmm/uniq_observations.dmm
breaksw;
default:
	echo Unknown command $CMD. Aborting.
	exit -1;
breaksw;
endsw;
